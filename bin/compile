#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

logger -p user.notice -t "slugc[$$]" "openbd - compile start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
ORGSUFF=bin
NEWSUFF=opt
OPT_DIR=${BIN_DIR%$ORGSUFF}$NEWSUFF
SERVLET_ENGINE="winstone-lite-0.9.10.jar"
BUILD_DIR=$1
CACHE_DIR=$2
LOGGER_FLAGS=""
OPENBD_VERSION="unknown"
KEEP_CACHE="false"
OK_OPENBD_VERSIONS=("nightly" "1.1" "1.2" "1.3" "1.4" "2.0" "2.0.1" "2.0.2" "3.0")
ENGINE_FOLDERS=("bluedragon" "WEB-INF/lib" "WEB-INF/webresources")

#move everything into webroot folder
cd ${BUILD_DIR}
mkdir -p .webroot
cp -r * .webroot
mv .webroot webroot

#figure out version used if a thin deployment
for i in ${OK_OPENBD_VERSIONS[@]}
do
  if [[ -f ${BUILD_DIR}/webroot/WEB-INF/lib/openbd-heroku-readme-${i}.txt ]]; then
    OPENBD_VERSION=$i
    if [[ -f ${CACHE_DIR}/webroot/WEB-INF/lib/openbd-heroku-readme-${i}.txt ]]; then
      if [[ $i != "nightly" ]]; then
        KEEP_CACHE="true"
      fi
    fi
    break
  fi
done

if [ $KEEP_CACHE == "false" ]; then
  rm -rf $CACHE_DIR
fi

if [[ $OPENBD_VERSION == "unknown" && -f ${BUILD_DIR}/webroot/WEB-INF/lib/OpenBlueDragon.jar ]]; then
  # use developer supplied engine
  echo -n "-----> Installing Developer Supplied OpenBD Engine..."
  if [ ! -f ${BUILD_DIR}/${SERVLET_ENGINE} ]; then
    cp ${OPT_DIR}/server-engines/${SERVLET_ENGINE} ${BUILD_DIR}
  fi
  echo " done"
else
  # use thin deployment. Install OpenBD and overlay developer supplied files
  if [[ ! -d $CACHE_DIR/webroot ]]; then
    echo -n "-----> Downloading OpenBD ${OPENBD_VERSION}..."
    mkdir -p $CACHE_DIR
    cd $CACHE_DIR
    mkdir -p webroot
    cd webroot
    logger -p user.notice -t "slugc[$$]" "openbd - download war file"
    curl -o openbd.war --silent --location http://openbd.org/download/${OPENBD_VERSION}/openbd.war
    logger -p user.notice -t "slugc[$$]" "openbd - explode war file"
    jar xf openbd.war
    rm -f openbd.war
    cp -r ${BUILD_DIR}/webroot/WEB-INF/lib/openbd-heroku-readme-${OPENBD_VERSION}.txt ${CACHE_DIR}/webroot/WEB-INF/lib
    cp -r ${OPT_DIR}/patches/WEB-INF/lib/urlrewritefilter-4.0.3.jar ${CACHE_DIR}/webroot/WEB-INF/lib
    echo " done"
  else
    cd $CACHE_DIR/webroot
  fi  
  echo -n "-----> Installing OpenBD ${OPENBD_VERSION}..."
  for i in ${ENGINE_FOLDERS[@]}
  do
    if [ -f ${BUILD_DIR}/webroot/${i} ]; then
      mv ${BUILD_DIR}/webroot/${i} ${BUILD_DIR}/${i}-org
      mkdir -p ${BUILD_DIR}/webroot/${i}
      cp -r ${i}/* ${BUILD_DIR}/webroot/${i}
      cp -r ${BUILD_DIR}/webroot/${i}-org/* ${BUILD_DIR}/webroot/${i}
      rm -rf ${BUILD_DIR}/webroot/${i}-org
    else
      mkdir -p ${BUILD_DIR}/webroot/${i}
      cp -r ${i}/* ${BUILD_DIR}/webroot/${i}
    fi
  done  
  if [ ! -f ${BUILD_DIR}/${SERVLET_ENGINE} ]; then
    cp ${OPT_DIR}/server-engines/${SERVLET_ENGINE} ${BUILD_DIR}
  fi
  echo " done"
fi

# install Procfile
if [ -f ${BUILD_DIR}/Procfile ]; then
  rm -rf ${BUILD_DIR}/Procfile
fi
if [ -f ${BUILD_DIR}/webroot/Procfile ]; then
  rm -rf ${BUILD_DIR}/webroot/Procfile
fi
echo -n "-----> Generating Procfile..."
echo -e "web: java \$JAVA_OPTS -Dlog4j.configuration=file:webroot/WEB-INF/bluedragon/log4j.properties -jar ${SERVLET_ENGINE} --webroot=./webroot --httpPort=\$PORT" >> ${BUILD_DIR}/Procfile
echo " done"

#fixup bluedragon.xml
echo -n "-----> Patching bluedragon.xml..."
cd ${BUILD_DIR}/webroot/WEB-INF/bluedragon
awk "/<file/{doit=1} doit{sub(/<trustcache>[^<]+<\/trustcache>/, \"<trustcache>true</trustcache>\")} /<\/file>/{doit=0}{print}" bluedragon.xml > bluedragon.xml.tmp && mv bluedragon.xml.tmp bluedragon.xml 
awk "/<system/{doit=1} doit{sub(/<password>[^<]+<\/password>/, \"<password>$OPENBD_PASSWORD</password>\")} /<\/system>/{doit=0}{print}" bluedragon.xml > bluedragon.xml.tmp && mv bluedragon.xml.tmp bluedragon.xml 
echo " done"

logger -p user.notice -t "slugc[$$]" "openbd - compile complete $LOGGER_FLAGS"